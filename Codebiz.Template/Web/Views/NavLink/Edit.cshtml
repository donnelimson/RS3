@model Web.Models.ViewModels.NavLink.NavLinkEditViewModel
@{
    ViewBag.Title = "Edit Navigation Link";
}
<!-- BEGIN PAGE BAR -->
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <a href="@Url.Action("Index", "NavLink")">Navigation Link</a>
            <i class="fa fa-circle"></i>
        </li>
        <li>
            <span>Edit</span>
        </li>
    </ul>
    <div class="page-toolbar">
        <a class="btn btn-sm btn-default" href="@Url.Action("Index", "NavLink")">Back to List</a>
    </div>
</div>
<!-- END PAGE BAR -->
<!-- BEGIN PAGE TITLE-->
<h1 class="page-title">
    Navigation Link
    <small>View, add, edit navigation links</small>
</h1>
<!-- END PAGE TITLE-->
<!-- END PAGE HEADER-->
<div class="row">
    <div class="col-md-12">
        <!-- BEGIN PORTLET -->
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption">
                    @*<i class="fa fa-search"></i>*@Edit
                </div>
            </div>
            <div class="portlet-body form">
                @using (Html.BeginForm("Edit", "NavLink", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model=>model.NavLinkId)
                    <div class="form-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsParent, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                <div class="mt-checkbox-inline">
                                    <label class="mt-checkbox mt-checkbox-outline">
                                        <input name="IsParent" type="checkbox" value="true" @(Model.IsParent ? "checked" : "")>
                                        <span></span>
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Controller, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Controller, new { htmlAttributes = new { @class = "form-control", placeholder = "Controller" } })
                                @Html.ValidationMessageFor(model => model.Controller, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Action, new { htmlAttributes = new { @class = "form-control", placeholder = "Action" } })
                                @Html.ValidationMessageFor(model => model.Action, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IconClass, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                <div class="input-icon">
                                    <i class="@Model.IconClass"></i>
                                    @Html.EditorFor(model => model.IconClass, new { htmlAttributes = new { @class = "form-control", placeholder = "Icon class" } })
                                    @Html.ValidationMessageFor(model => model.IconClass, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SelectedParentNavLinkId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.SelectedParentNavLinkId, new SelectList(Model.ParentNavLinkLookUp, "Key", "Value"), "Please select", new { @class = "form-control select2", placeholder = "Please select" })
                                @Html.ValidationMessageFor(model => model.SelectedParentNavLinkId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Parameters, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.TextAreaFor(model => model.Parameters, new { @class = "form-control", placeholder = "Parameters", rows = "4" })
                                @Html.ValidationMessageFor(model => model.Parameters, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                <div class="mt-checkbox-inline">
                                    <label class="mt-checkbox mt-checkbox-outline">
                                        <input name="IsActive" type="checkbox" value="true" @(Model.IsActive ? "checked" : "")>
                                        <span></span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-actions fluid">
                        <div class="row">
                            <div class="col-md-offset-3 col-md-9">
                                <button type="submit" class="btn green">Submit</button>
                                <a class="btn white" href="@Url.Action("Index")">Cancel</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <!-- END PORTLET -->
    </div>
</div>
@section PageScripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $("#IconClass").change(function () {
                $(this).parent(".input-icon").find("i").removeClass().addClass($(this).val());
            });
        });
    </script>
}